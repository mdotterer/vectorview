VectorView
---------

1. Overview
VectorView is a plugin for Ruby on Rails that provides Ruby Vector Graphics (RVG) syntax in the views.

2. History
VectorView was orinally created by Michael Dotterer to produce image versions of the puzzlesin his puzzle site, http://selzzup.com

3. Dependencies
RMagick (and ImageMagick) are required. Installing these can be very complicated. Refer to the abundant help on the respective home pages and Google for help in installing these.

4. Compatibility
VectorView is compatible with Rails 2.3

VectorView has not been tested on Rails Edge

VectorView was previously running in Rails 2.2, but this code is not available on github. If you need this code, feel free to contact mdotterer on GitHub and he will provide it.

5. Installation
... Just do it? More later...

6. Usage
Once installed, use the action as the following:

app/controllers/foos_controller.rb
FoosController < ApplicationController
  # ...
  def show
    # ...
    respond_to do |format|
      #...
      format.png { render :layout => false }
    end
  end
end

app/views/foos/show.png.rvg
size 250, 250
draw do |canvas|
  # Your RVG code goes here!
   canvas.background_fill = 'white'

  canvas.g.translate(100, 150).rotate(-30) do |body|
    body.styles(:fill=>'yellow', :stroke=>'black', :stroke_width=>2)
    body.ellipse(50, 30)
    body.rect(45, 20, -20, -10).skewX(-35)
 end

 canvas.g.translate(130, 83) do |head|
    head.styles(:stroke=>'black', :stroke_width=>2)
    head.circle(30).styles(:fill=>'yellow')
    head.circle(5, 10, -5).styles(:fill=>'black')
    head.polygon(30,0, 70,5, 30,10, 62,25, 23,20).styles(:fill=>'orange')
 end

 foot = RVG::Group.new do |_foot|
    _foot.path('m0,0 v30 l30,10 l5,-10, l-5,-10 l-30,10z').
          styles(:stroke_width=>2, :fill=>'orange', :stroke=>'black')
 end
 canvas.use(foot).translate(75, 188).rotate(15)
 canvas.use(foot).translate(100, 185).rotate(-15)

 canvas.text(125, 30) do |title|
     title.tspan("duck|").styles(:text_anchor=>'end', :font_size=>20,
                    :font_family=>'helvetica', :fill=>'black')
     title.tspan("type").styles(:font_size=>22,
            :font_family=>'times', :font_style=>'italic', :fill=>'red')
  end
  canvas.rect(249,249).styles(:stroke=>'blue', :fill=>'none')

end


The above example comes from http://www.simplesystems.org/RMagick/doc/rvgtut.html
In my usage of RVG I found that site extremely helpful. There are more examples and references of that site. You will only need the code dealing with the actual drawing, converting the image type and creating the RVG objects is done for you automatically.
